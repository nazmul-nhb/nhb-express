name: Deploy to Vercel

on:
    push:
        branches:
            - main
    workflow_dispatch:

permissions:
    contents: write
    id-token: write

jobs:
    publish:
        runs-on: ubuntu-latest

        steps:
            # Checkout Repository
            - name: Checkout Repository
              uses: actions/checkout@v4

            # Get the current version from package.json
            - name: Get version from package.json
              id: get_version
              run: |
                  VERSION=$(jq -r .version package.json)
                  echo "VERSION=${VERSION}" >> $GITHUB_ENV

            # Get the latest Git tag (fetch first to ensure remote tags are available)
            - name: Get latest Git tag
              id: get_latest_tag
              run: |
                  git fetch --tags
                  LATEST_TAG=$(git tag -l 'v*' --sort=-v:refname | head -n 1)
                  echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
                  echo "Latest tag found: $LATEST_TAG"

            # Compare versions and skip if same
            - name: Check if version changed
              id: check_version
              run: |
                  if [ "v${{ env.VERSION }}" = "${{ env.LATEST_TAG }}" ]; then
                      echo "VERSION_UNCHANGED=true" >> $GITHUB_ENV
                      echo "No new version to publish"
                      exit 0  # Exit early if version is unchanged
                  else
                      echo "VERSION_UNCHANGED=false" >> $GITHUB_ENV
                      echo "New version detected: v${{ env.VERSION }}"
                  fi

            # Install PNPM, Setup Node.js, and Install Dependencies only if version changed
            - name: Install PNPM
              if: env.VERSION_UNCHANGED == 'false'
              run: npm install -g pnpm

            - name: Setup Node.js
              if: env.VERSION_UNCHANGED == 'false'
              uses: actions/setup-node@v4
              with:
                  node-version: 22
                  registry-url: 'https://registry.npmjs.org/'
                  cache: 'pnpm'

            # Install Dependencies
            - name: Install Dependencies
              if: env.VERSION_UNCHANGED == 'false'
              run: pnpm install --frozen-lockfile

            # Deploy to Vercel only if version is different
            - name: Deploy to Vercel
              if: env.VERSION_UNCHANGED == 'false'
              run: |
                  pnpm build  # required to generate .dist or output directory
                  npx vercel deploy --prod --yes --token=${{ secrets.VERCEL_TOKEN }}
              env:
                  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
                  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

            # # Create a Git tag if version is different
            - name: Create Git Tag
              if: env.VERSION_UNCHANGED == 'false'
              run: |
                  git tag v${{ env.VERSION }}
                  git push origin v${{ env.VERSION }}
